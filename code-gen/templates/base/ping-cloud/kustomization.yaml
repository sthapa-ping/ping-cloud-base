kind: Kustomization
apiVersion: kustomize.config.k8s.io/v1beta1

resources:
- ${K8S_GIT_URL}/k8s-configs/ping-cloud/${KUSTOMIZE_BASE}?ref=${K8S_GIT_BRANCH}

images:
- name: pingidentity/pingdirectory
  newName: ${REGISTRY_NAME}/pingidentity/pingdirectory
- name: pingidentity/pingfederate
  newName: ${REGISTRY_NAME}/pingidentity/pingfederate
- name: pingidentity/pingaccess
  newName: ${REGISTRY_NAME}/pingidentity/pingaccess

configMapGenerator:

### PD topology descriptor.json file. Only required in multi-region deployments. ###
### Refer to profiles/pingdirectory/topology/descriptor-profiles.json.sample for more details. ###
- name: topology-descriptor
  behavior: merge
  files:
  - descriptor.json

patchesStrategicMerge:

### Ping app known_hosts file ###

- |-
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: known-hosts-config
  data:
    known_hosts: |
      ${KNOWN_HOSTS_CLUSTER_STATE_REPO}

### Ping cloud stack service account ###
- |-
  apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: ping-serviceaccount
    annotations:
      purpose: service-account-for-ping-cloud-stack
      ${IRSA_PING_ANNOTATION_KEY_VALUE}

patchesJson6902:

### PingDirectory Last Update Config Map ###
- target:
    group: apps
    version: v1
    kind: StatefulSet
    name: pingdirectory
  patch: |
    - op: add
      path: /spec/template/spec/containers/0/envFrom/-
      value:
        configMapRef:
          name: pingdirectory-last-update-config

### PingFederate Admin Last Update Config Map ###
- target:
    group: apps
    version: v1
    kind: StatefulSet
    name: pingfederate-admin
  patch: |
    - op: add
      path: /spec/template/spec/containers/0/envFrom/-
      value:
        configMapRef:
          name: pingfederate-last-update-config

### PingFederate Engine Last Update Config Map ###
- target:
    group: apps
    version: v1
    kind: StatefulSet
    name: pingfederate
  patch: |
    - op: add
      path: /spec/template/spec/containers/0/envFrom/-
      value:
        configMapRef:
          name: pingfederate-last-update-config

### PingAccess Admin Last Update Config Map ###
- target:
    group: apps
    version: v1
    kind: StatefulSet
    name: pingaccess-admin
  patch: |
    - op: add
      path: /spec/template/spec/containers/0/envFrom/-
      value:
        configMapRef:
          name: pingaccess-last-update-config

### PingAccess Engine Last Update Config Map ###
- target:
    group: apps
    version: v1
    kind: StatefulSet
    name: pingaccess
  patch: |
    - op: add
      path: /spec/template/spec/containers/0/envFrom/-
      value:
        configMapRef:
          name: pingaccess-last-update-config

### PingAccess WAS Admin Last Update Config Map ###
- target:
    group: apps
    version: v1
    kind: StatefulSet
    name: pingaccess-was-admin
  patch: |
    - op: add
      path: /spec/template/spec/containers/0/envFrom/-
      value:
        configMapRef:
          name: pingaccess-was-last-update-config

### PingAccess WAS Engine Last Update Config Map ###
- target:
    group: apps
    version: v1
    kind: StatefulSet
    name: pingaccess-was
  patch: |
    - op: add
      path: /spec/template/spec/containers/0/envFrom/-
      value:
        configMapRef:
          name: pingaccess-was-last-update-config

### Ingress patches ###

# PingAccess admin and PingFederate admin through PingAccess-WAS
- target:
    group: extensions
    version: v1beta1
    kind: Ingress
    name: pingaccess-was-ingress
  patch: |
    # PingAccess admin through PingAccess-WAS
    - op: replace
      path: /spec/tls/0/hosts/0
      value: pingaccess-admin.${DNS_ZONE}
    - op: replace
      path: /spec/rules/0/host
      value: pingaccess-admin.${DNS_ZONE}

    # PingFederate admin through PingAccess-WAS
    - op: replace
      path: /spec/tls/0/hosts/1
      value: pingfederate-admin.${DNS_ZONE}
    - op: replace
      path: /spec/rules/1/host
      value: pingfederate-admin.${DNS_ZONE}

    # Grafana to pingaccess was runtime
    - op: replace
      path: /spec/tls/0/hosts/2
      value: monitoring.${DNS_ZONE}
    - op: replace
      path: /spec/rules/2/host
      value: monitoring.${DNS_ZONE}

    # Prometheus to pingaccess was runtime
    - op: replace
      path: /spec/tls/0/hosts/3
      value: prometheus.${DNS_ZONE}
    - op: replace
      path: /spec/rules/3/host
      value: prometheus.${DNS_ZONE}

    # Kibana pingaccess was runtime
    - op: replace
      path: /spec/tls/0/hosts/4
      value: logs.${DNS_ZONE}
    - op: replace
      path: /spec/rules/4/host
      value: logs.${DNS_ZONE}

# pingaccess runtime
- target:
    group: extensions
    version: v1beta1
    kind: Ingress
    name: pingaccess-ingress
  patch: |
    - op: replace
      path: /spec/tls/0/hosts/0
      value: pingaccess.${DNS_ZONE}
    - op: replace
      path: /spec/rules/0/host
      value: pingaccess.${DNS_ZONE}
    # PingAccess global ingress
    - op: add
      path: /spec/tls/0/hosts/-
      value: pa.${ENV}.${GLOBAL_TENANT_DOMAIN}
    - op: add
      path: /spec/rules/-
      value:
        host: pa.${ENV}.${GLOBAL_TENANT_DOMAIN}
        http:
          paths:
          # This rule gives external access to the global pingaccess runtime service
          - path: /
            backend:
              serviceName: pingaccess
              servicePort: 443

# pingaccess admin api
- target:
    group: extensions
    version: v1beta1
    kind: Ingress
    name: pingaccess-admin-ingress
  patch: |
    - op: replace
      path: /spec/tls/0/hosts/0
      value: pingaccess-admin-api.${DNS_ZONE}
    - op: replace
      path: /spec/rules/0/host
      value: pingaccess-admin-api.${DNS_ZONE}

# pingaccess agent
- target:
    group: extensions
    version: v1beta1
    kind: Ingress
    name: pingaccess-agent-ingress
  patch: |
    - op: replace
      path: /spec/tls/0/hosts/0
      value: pingaccess-agent.${DNS_ZONE}
    - op: replace
      path: /spec/rules/0/host
      value: pingaccess-agent.${DNS_ZONE}

# pingaccess was admin
- target:
    group: extensions
    version: v1beta1
    kind: Ingress
    name: pingaccess-was-admin-ingress
  patch: |
    - op: replace
      path: /spec/tls/0/hosts/0
      value: pingaccess-was-admin.${DNS_ZONE}
    - op: replace
      path: /spec/rules/0/host
      value: pingaccess-was-admin.${DNS_ZONE}

# pingfederate runtime
- target:
    group: extensions
    version: v1beta1
    kind: Ingress
    name: pingfederate-ingress
  patch: |
    - op: replace
      path: /spec/tls/0/hosts/0
      value: pingfederate.${DNS_ZONE}
    - op: replace
      path: /spec/rules/0/host
      value: pingfederate.${DNS_ZONE}
    # PingFederate global ingress
    - op: add
      path: /spec/tls/0/hosts/-
      value: pf.${ENV}.${GLOBAL_TENANT_DOMAIN}
    - op: add
      path: /spec/rules/-
      value:
        host: pf.${ENV}.${GLOBAL_TENANT_DOMAIN}
        http:
          paths:
          # This rule gives external access to the global pingfederate runtime service
          - path: /
            backend:
              serviceName: pingfederate
              servicePort: 9031

# pingfederate admin api
- target:
    group: extensions
    version: v1beta1
    kind: Ingress
    name: pingfederate-admin-ingress
  patch: |
    - op: replace
      path: /spec/tls/0/hosts/0
      value: pingfederate-admin-api.${DNS_ZONE}
    - op: replace
      path: /spec/rules/0/host
      value: pingfederate-admin-api.${DNS_ZONE}

# pingdirectory HTTP
- target:
    group: extensions
    version: v1beta1
    kind: Ingress
    name: pingdirectory-http-ingress
  patch: |
    - op: replace
      path: /spec/tls/0/hosts/0
      value: pingdirectory.${DNS_ZONE}
    - op: replace
      path: /spec/rules/0/host
      value: pingdirectory.${DNS_ZONE}

# Set a hostname for all the headless services so their endpoint IPs are published to Route53
- target:
    version: v1
    kind: Service
    name: pingdirectory
  patch: |-
    - op: replace
      path: /metadata/annotations/external-dns.alpha.kubernetes.io~1hostname
      value: pingdirectory-cluster.${DNS_ZONE}

- target:
    version: v1
    kind: Service
    name: pingfederate-cluster
  patch: |-
    - op: replace
      path: /metadata/annotations/external-dns.alpha.kubernetes.io~1hostname
      value: pingfederate-cluster.${DNS_ZONE}

- target:
    version: v1
    kind: Service
    name: pingaccess-admin
  patch: |-
    - op: replace
      path: /metadata/annotations/external-dns.alpha.kubernetes.io~1hostname
      value: pingaccess-cluster.${DNS_ZONE}

- target:
    version: v1
    kind: Service
    name: pingaccess-was-admin
  patch: |-
    - op: replace
      path: /metadata/annotations/external-dns.alpha.kubernetes.io~1hostname
      value: pingaccess-was-cluster.${DNS_ZONE}

# pingdirectory admin
- target:
    version: v1
    kind: Service
    name: pingdirectory-admin
  patch: |-
    - op: replace
      path: /metadata/annotations/external-dns.alpha.kubernetes.io~1hostname
      value: pingdirectory-admin.${DNS_ZONE}
