apiVersion: argoproj.io/v1alpha1
kind: EventBus
metadata:
  name: default
  namespace: argo-events
spec:
  nats:
    native:
      replicas: 3
      auth: token
      containerTemplate:
        resources:
          requests:
            cpu: "10m"
      metricsContainerTemplate:
        resources:
          requests:
            cpu: "10m"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    controller: eventbus-controller
                    eventbus-name: default
                topologyKey: kubernetes.io/hostname
              weight: 100
      persistence:
        storageClassName: standard
        accessMode: ReadWriteOnce
        volumeSize: 2Gi
---
apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: webhook
  namespace: argo-events
spec:
  service:
    ports:
      - port: 12999
        targetPort: 12999
  webhook:
    devops-toolkit:
      port: "12999"
      endpoint: /trigger-slack
      method: POST
---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: webhook
  namespace: argo-events
spec:
  template:
    serviceAccountName: argo-events-sa
  dependencies:
  - name: payload
    eventSourceName: webhook
    eventName: devops-toolkit
  triggers:
    - template:
        name: slack-trigger
        slack:
          channel: general
          message: hello world
          slackToken:
            key: token
            name: slack-secret
      parameters:
        - src:
            dependencyName: test-dep
            dataKey: body.channel
          dest: slack.channel
        - src:
            dependencyName: test-dep
            dataKey: body.message
          dest: slack.message
