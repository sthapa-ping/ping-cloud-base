# create configmap for cluster name and aws region for CloudWatch Logs
# need to replace the placeholders cluster_name and region_name
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: nr-license-key
  annotations:
    sealedsecrets.bitnami.com/managed: "true"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-info
data:
  cluster.name: cluster_name
  logs.region: region_name
  log.level: "error"
  read.head: "True"
  read.tail: "Off"
  newrelic_cluster_name: cluster_name
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluent-bit
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluent-bit-role
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
  - apiGroups: [""]
    resources:
      - namespaces
      - pods
      - pods/logs
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluent-bit-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluent-bit-role
subjects:
  - kind: ServiceAccount
    name: fluent-bit
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  labels:
    k8s-app: fluent-bit
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush                     5
        Daemon                    off
        Parsers_File              parsers.conf
        storage.path              /fluent-bit/state/flb-storage/
        storage.sync              normal
        storage.checksum          off
        storage.backlog.mem_limit 5M
        
    @INCLUDE ping-log.conf
    @INCLUDE p14c.conf
    @INCLUDE nr.conf
    @INCLUDE nonping-log.conf
    @INCLUDE dataplane-log.conf
    @INCLUDE host-log.conf
    @INCLUDE outputs.conf

  p14c.conf: | 
    [INPUT]
        Name                tail
        Tag                 p14c.*
        Path                /var/log/containers/p14c-*_ping-cloud*.log
        multiline.parser    docker, cri
        DB                  /fluent-bit/state/flb_p14c.db
        Mem_Buf_Limit       50MB
        Skip_Long_Lines     Off
        Refresh_Interval    10
        Rotate_Wait         30
        storage.type        filesystem
        Read_from_Head      ${READ_FROM_HEAD}

    # Multiline exceptions
    [FILTER]
        Name                  multiline
        match                 p14c.*  
        multiline.key_content log
        multiline.parser      multiline_java_log
    
    [FILTER]
        Name                kubernetes
        Match               p14c.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_Tag_Prefix     p14c.var.log.containers.
        Merge_Log           On
        Merge_Log_Key       log_processed
        K8S-Logging.Parser  On
        K8S-Logging.Exclude Off
        Annotations         Off
        Labels              On
        Buffer_Size         1Mb
    
    [FILTER]
        Name                lua
        Match               p14c.*
        script              record_modifier.lua
        call                record_modifier

    # P14C
    [FILTER]
        Name                rewrite_tag
        Match               p14c.*
        Rule                $log ^.*$ $stream_name.cw_out true

    [FILTER]
        Name                rewrite_tag
        Match               p14c.*
        Rule                $log ^.*$ $stream_name.s3_app_out false

  ping-log.conf: |
    [INPUT]
        Name                tail
        Tag                 ping.*
        Path                /var/log/containers/*_ping-cloud*.log
        Exclude_Path        /var/log/containers/p14c-*
        multiline.parser    docker, cri
        DB                  /fluent-bit/state/flb_ping.db
        Mem_Buf_Limit       50MB
        Skip_Long_Lines     Off
        Refresh_Interval    10
        Rotate_Wait         30
        storage.type        filesystem
        Read_from_Head      ${READ_FROM_HEAD}

    # Multiline exceptions
    [FILTER]
        Name                  multiline
        match                 ping.*  
        multiline.key_content log
        multiline.parser      multiline_java_log
    
    [FILTER]
        Name                kubernetes
        Match               ping.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_Tag_Prefix     ping.var.log.containers.
        Merge_Log           On
        Merge_Log_Key       log_processed
        K8S-Logging.Parser  On
        K8S-Logging.Exclude Off
        Annotations         Off
        Labels              On
        Buffer_Size         1Mb
    
    [FILTER]
        Name                lua
        Match               ping.*
        script              record_modifier.lua
        call                record_modifier
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^.+$ app.$stream_name true
    
    # Ping-cloud healthcheck
    [FILTER]
        Name                rewrite_tag
        Match               ping.*healthcheck*
        Rule                $log ^.+$ $stream_name.elk_out false

    # Ping-cloud metadata
    [FILTER]
        Name                rewrite_tag
        Match               ping.*metadata*
        Rule                $log ^.*$ $stream_name.s3_app_out false
        Emitter_Name        ping_metadata

    [FILTER]
        Name                lua
        Match               ping.*
        script              change_output.lua
        call                change_output

    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $tag ^.+$ $tag false
        Emitter_Name        change_output_app

    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^.*SIEM app_siem_logs.elk_out false
        Emitter_Name        siem_logs
    
    # Exclude DA healthcheck logs
    [FILTER]
        Name                grep
        Match               ping.*
        Exclude             log ^<\d+.>|^\/opt\/out\/instance\/logs\/access.*127\.0\.0\.1.*GET \/ HTTP\/2\.0.*200
    
    # Exclude apps healthcheck logs
    [FILTER]
        Name                grep
        Match               ping.*
        Exclude             log ^<\d+.>|^\/opt\/out\/instance\/log\/.*api.*127\.0\.0\.1\| GET\| .*\/version\| 200

    # PA/PAWAS/DA
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/pingaccess_api_audit pingaccess_api_audit_logs.$stream_name.cw_out false
        Emitter_Name        pingaccess_api_audit_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/pingaccess_agent_audit pingaccess_agent_audit_logs.$stream_name.cw_out false
        Emitter_Name        pingaccess_agent_audit_logs

    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/pingaccess_engine_audit pingaccess_engine_audit_logs.$stream_name.cw_out false
        Emitter_Name        pingaccess_engine_audit_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/pingaccess_sideband_client_audit pingaccess_sideband_client_audit_logs.$stream_name.cw_out false
        Emitter_Name        pingaccess_sideband_client_audit_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/pingaccess_sideband_audit pingaccess_sideband_audit_logs.$stream_name.cw_out false
        Emitter_Name        pingaccess_sideband_audit_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/pingaccess pingaccess_logs.$stream_name.cw_out false
        Emitter_Name        pingaccess_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/upgrade\/log\/audit pingaccess_upgrade_audit_logs.$stream_name.cw_out false
        Emitter_Name        pingaccess_upgrade_audit_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/upgrade\/log\/upgrade_status pingaccess_upgrade_status_logs.$stream_name.cw_out false
        Emitter_Name        pingaccess_upgrade_status_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/upgrade\/log\/upgrade pingaccess_upgrade_logs.$stream_name.cw_out false
        Emitter_Name        pingaccess_upgrade_logs
    
    # PD
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/logs\/server server_logs.$stream_name.cw_out false
        Emitter_Name        server_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/logs\/access access_logs.$stream_name.cw_out false
        Emitter_Name        access_logs

    [FILTER]
        Name                rewrite_tag
        Match               access_logs.*
        Rule                $kubernetes['container_name'] ^pingdirectory$ pd.elk_out true
        Emitter_Name        pd_siem_elk
    
    [FILTER]
        Name                lua
        Match               pd.elk_out
        script              deduplicate.lua
        call                deduplicate

    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/logs\/errors errors_logs.$stream_name.cw_out false
        Emitter_Name        errors_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/logs\/change-notifications change_notifications_logs.$stream_name.cw_out false
        Emitter_Name        change_notifications_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/logs\/failed-ops failed_ops_logs.$stream_name.cw_out false
        Emitter_Name        failed_ops_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/logs\/expensive-write-ops expensive_write_ops_logs.$stream_name.cw_out false
        Emitter_Name        expensive_write_ops_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/logs\/replication replication_logs.$stream_name.cw_out false
        Emitter_Name        replication_logs

    
    # PDSync   
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/logs\/sync-failed-ops sync_failed_ops_logs.$stream_name.cw_out false
        Emitter_Name        sync_failed_ops_logs
    
    # PF
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/admin-api admin_api_logs.$stream_name.cw_out false
        Emitter_Name        admin_api_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/admin-event-detail admin_event_detail_logs.$stream_name.cw_out false
        Emitter_Name        admin_event_detail_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/admin admin_logs.$stream_name.cw_out false
        Emitter_Name        admin_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/server server_logs.$stream_name.cw_out false
        Emitter_Name        server_pf_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/runtime-api runtime_api_logs.$stream_name.cw_out false
        Emitter_Name        runtime_api_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/transaction transaction_logs.$stream_name.elk_out false
        Emitter_Name        transaction_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/audit audit_logs.$stream_name.cw_out false
        Emitter_Name        audit_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/provisioner-audit provisioner_audit_logs.$stream_name.cw_out false
        Emitter_Name        provisioner_audit_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/provisioner provisioner_logs.$stream_name.cw_out false
        Emitter_Name        provisioner_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/init init_logs.$stream_name.cw_out false
        Emitter_Name        init_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/jvm-garbage-collection jvm_garbage_collection_logs.$stream_name.cw_out false
        Emitter_Name        jvm_garbage_collection_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/request request_logs.$stream_name.elk_out false
        Emitter_Name        requests_logs
    
    # PC
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/application-api pingcentral_application_api.$stream_name.cw_out false
        Emitter_Name        pingcentral_application_api
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/application-ext pingcentral_application_ext.$stream_name.cw_out false
        Emitter_Name        pingcentral_application_ext
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/application pingcentral_application.$stream_name.cw_out false
        Emitter_Name        pingcentral_application
    
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/log\/monitor pingcentral_monitor.$stream_name.cw_out false
        Emitter_Name        pingcentral_monitor
    
    # DA
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^\/opt\/out\/instance\/logs\/error error_logs.$stream_name.cw_out false
        Emitter_Name        error_logs

    # Everything else
    [FILTER]
        Name                rewrite_tag
        Match               ping.*
        Rule                $log ^.*$ $stream_name.cw_out false
        Emitter_Name        unmatched_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               app.*
        Rule                $log ^.*$ $stream_name.s3_app_out false
        Emitter_Name        unmatched_logs_s3_out

    [FILTER]
        Name                record_modifier
        Match               *
        Remove_key          tag
        Remove_key          stream_name

  nr.conf: |
    [INPUT]
        Name                tail
        Tag                 newrelic_kube.*
        Path                /var/log/containers/*external-dns*.log, /var/log/containers/*kube-system*.log
        Exclude_Path        /var/log/containers/*kube-proxy*.log, /var/log/containers/*sealed-secrets-controller*.log
        multiline.parser    docker, cri
        DB                  /fluent-bit/state/flb_nr.db
        Mem_Buf_Limit       50MB
        Skip_Long_Lines     Off
        Refresh_Interval    10
        Rotate_Wait         30
        storage.type        filesystem
        Read_from_Head      ${READ_FROM_HEAD}
    [FILTER]
        Name           kubernetes
        Match          newrelic_kube.*
        Kube_URL       https://kubernetes.default.svc:443
        Kube_Tag_Prefix newrelic_kube.var.log.containers.
        Buffer_Size    32k
        K8S-Logging.Exclude Off
        Labels         Off
        Annotations    Off
    [FILTER]
        Name           nest
        Match          newrelic_kube.*
        Operation      lift
        Nested_under   kubernetes
    [FILTER]
        Name           record_modifier
        Match          newrelic_kube.*
        Record         cluster_name ${NR_CLUSTER_NAME}
        Allowlist_key  container_name
        Allowlist_key  namespace_name
        Allowlist_key  pod_name
        Allowlist_key  stream
        Allowlist_key  message
        Allowlist_key  log

  nonping-log.conf: |
    [INPUT]
        Name                tail
        Tag                 nonping.*
        Path                /var/log/containers/*.log
        Exclude_Path        *_ping-cloud*.log, *fluent-bit*.log, *nri-bundle*.log, *grafana*.log, *prometheus-*, *cloudwatch-agent*.log
        multiline.parser    docker, cri
        DB                  /fluent-bit/state/flb_nonping.db
        Mem_Buf_Limit       50MB
        Skip_Long_Lines     Off
        Refresh_Interval    10
        Rotate_Wait         30
        storage.type        filesystem
        Read_from_Head      ${READ_FROM_HEAD}
    
    [FILTER]
        Name                kubernetes
        Match               nonping.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_Tag_Prefix     nonping.var.log.containers.
        Merge_Log           On
        Merge_Log_Key       log_processed
        K8S-Logging.Parser  On
        K8S-Logging.Exclude Off
        Annotations         Off
        Labels              Off
        Buffer_Size         1Mb

    [FILTER]
        Name                lua
        Match               nonping.*
        script              record_modifier.lua
        call                record_modifier
        
    [FILTER]
        Name                rewrite_tag
        Match               nonping.*elasticsearch-bootstrap*
        rule                $log ^.*$ $stream_name.s3_app_out false
    
    [FILTER]
        Name                rewrite_tag
        Match               nonping.*logging-bootstrap*
        rule                $log ^.*$ $stream_name.s3_app_out false
    
    [FILTER]
        Name                rewrite_tag
        Match               nonping.*kibana-bootstrap*
        rule                $log ^.*$ $stream_name.s3_app_out false
  
    [FILTER]
        Name                rewrite_tag
        Match               nonping.*
        Rule                $log ^.+$ app.$stream_name true
    
    [FILTER]
        Name                rewrite_tag
        Match               nonping.*healthcheck*
        Rule                $log ^.+$ $stream_name.elk_out false
    
    [FILTER]
        Name                rewrite_tag
        Match               nonping.*postgres-operator*
        rule                $log ^.*$ $stream_name.elk_out true

    [FILTER]
        Name                rewrite_tag
        Match               nonping.*postgres-operator*
        rule                $log ^.*$ $stream_name.s3_app_out false

    [FILTER]
        Name                lua
        Match               nonping.*nginx*
        script              change_output.lua
        call                change_output

    [FILTER]
        Name                rewrite_tag
        Match               nonping.*nginx*
        Rule                $tag ^.+$ $tag false
        Emitter_Name        change_out_nginx
    
    # Everything else
    [FILTER]
        Name                rewrite_tag
        Match               nonping.*
        Rule                $log ^.*$ $stream_name.cw_out false
        Emitter_Name        unmatched_nonping_logs
    
    [FILTER]
        Name                rewrite_tag
        Match               app.*
        Rule                $log ^.*$ $stream_name.s3_app_out false
        emitter_name        unmatched_nonping_s3_app_out

    [FILTER]
        Name                record_modifier
        Match               *
        Remove_key          tag
        Remove_key          stream_name

  dataplane-log.conf: |
    [INPUT]
        Name                systemd
        Tag                 dataplane.systemd.*
        Systemd_Filter      _SYSTEMD_UNIT=docker.service
        Systemd_Filter      _SYSTEMD_UNIT=kubelet.service
        DB                  /fluent-bit/state/systemd.db
        Path                /var/log/journal
        Read_From_Tail      ${READ_FROM_TAIL}

    [FILTER]
        Name                modify
        Match               dataplane.systemd.*
        Rename              _HOSTNAME                   hostname
        Rename              _SYSTEMD_UNIT               systemd_unit
        Rename              MESSAGE                     log
        Remove_regex        ^((?!hostname|systemd_unit|log).)*$

    [FILTER]
        Name                aws
        Match               dataplane.*
        imds_version        v1

    [FILTER]
        Name           record_modifier
        Match          dataplane.*
        Record         cluster_name ${NR_CLUSTER_NAME}

    [FILTER]
        Name                rewrite_tag
        Match               dataplane.systemd.*
        Rule                $log ^.+$ $TAG[2].$TAG[3]-$hostname.s3_dp_out true
        emitter_name        dataplane_s3_out
    
  host-log.conf: |
    [INPUT]
        Name                tail
        Tag                 host.dmesg
        Path                /var/log/dmesg
        Parser              dmesg
        DB                  /fluent-bit/state/flb_dmesg.db
        Mem_Buf_Limit       5MB
        Skip_Long_Lines     On
        Refresh_Interval    10
        Read_from_Head      ${READ_FROM_HEAD}

    [INPUT]
        Name                tail
        Tag                 host.messages
        Path                /var/log/messages
        Parser              syslog
        DB                  /fluent-bit/state/flb_messages.db
        Mem_Buf_Limit       5MB
        Skip_Long_Lines     On
        Refresh_Interval    10
        Read_from_Head      ${READ_FROM_HEAD}

    [INPUT]
        Name                tail
        Tag                 host.secure
        Path                /var/log/secure
        Parser              syslog
        DB                  /fluent-bit/state/flb_secure.db
        Mem_Buf_Limit       5MB
        Skip_Long_Lines     On
        Refresh_Interval    10
        Read_from_Head      ${READ_FROM_HEAD}

    [FILTER]
        Name                aws
        Match               host.*
        private_ip          true
        imds_version        v1
        hostname            true
    
    [FILTER]
        Name                lua
        Match               host.*
        script              time.lua
        call                append_tag

    [FILTER]
        Name           record_modifier
        Match          host.*
        Record         cluster_name ${NR_CLUSTER_NAME}

    [FILTER]
        Name                rewrite_tag
        Match               host.*
        Rule                $log ^.+$ $TAG[1].$host.s3_hl_out true
        emitter_name        host_s3_out

  parsers.conf: |
    [PARSER]
        Name                docker
        Format              json
        Time_Key            time
        Time_Format         %Y-%m-%dT%H:%M:%S.%LZ
    
    [PARSER]
        Name                dmesg
        Format              regex
        Regex               ^\[.*?\](?<log>.*)$

    [PARSER]
        Name                syslog
        Format              regex
        Regex               ^(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<log>.*)$
        Time_Key            time
        Time_Format         %b %d %H:%M:%S

    [PARSER]
        Name                container_firstline
        Format              regex
        Regex               (?<log>(?<="log":")\S(?!\.).*?)(?<!\\)".*(?<stream>(?<="stream":").*?)".*(?<time>\d{4}-\d{1,2}-\d{1,2}T\d{2}:\d{2}:\d{2}\.\w*).*(?=})
        Time_Key            time
        Time_Format         %Y-%m-%dT%H:%M:%S.%LZ

    [PARSER]
        Name                cwagent_firstline
        Format              regex
        Regex               (?<log>(?<="log":")\d{4}[\/-]\d{1,2}[\/-]\d{1,2}[ T]\d{2}:\d{2}:\d{2}(?!\.).*?)(?<!\\)".*(?<stream>(?<="stream":").*?)".*(?<time>\d{4}-\d{1,2}-\d{1,2}T\d{2}:\d{2}:\d{2}\.\w*).*(?=})
        Time_Key            time
        Time_Format         %Y-%m-%dT%H:%M:%S.%LZ
    
    [MULTILINE_PARSER]
        Name multiline_java_log
        type regex
        parser json
        key_content log
    
        rule "start_state" "/(?:\/.*\/log[s]?\/\w+(?:\.log)?) ([0-9\-:T, ]+) (ERROR) (.*)/" "cont"
        rule "cont" "/(?:\/.*\/log[s]?\/\w+(?:\.log)?)[ \t]+(\w+\..*)/" "cont"
        rule "cont" "/(?:\/.*\/log[s]?\/\w+(?:\.log)?)[ \t]+(at \w+\..*|Caused by:.*|\.\.\. \d+ more)/" "cont"

  outputs.conf: |
    [OUTPUT]
        Name                cloudwatch
        Match               *.cw_out
        region              ${AWS_REGION}
        log_group_name      /aws/containerinsights/${CLUSTER_NAME}/application
        log_stream_name     $(tag)
        auto_create_group   true
        extra_user_agent    fluent-bit
    
    [OUTPUT]
        Name                cloudwatch
        Match               host.*
        region              ${AWS_REGION}
        log_group_name      /aws/containerinsights/${CLUSTER_NAME}/host
        log_stream_name     $(tag)-$(host)
        auto_create_group   true
        extra_user_agent    container-insights

    [OUTPUT]
        Name                cloudwatch
        Match               dataplane.systemd.*
        region              ${AWS_REGION}
        log_group_name      /aws/containerinsights/${CLUSTER_NAME}/dataplane
        log_stream_name     $(tag[2]).$(tag[3])-$(hostname)
        auto_create_group   true
        extra_user_agent    container-insight

    [OUTPUT]
        Name                http
        Match               *.elk_out
        Host                logstash-elastic.elastic-stack-logging
        Port                8080
        Format              json_lines
    
    [OUTPUT]
        Name                s3
        Match               *.s3_app_out
        Bucket              ${S3_BUCKET_NAME}
        Region              ${AWS_REGION}
        s3_key_format       /application/$TAG/%Y/%m/%d/%H/%M/%S
        upload_timeout      5m
    
    [OUTPUT]
        Name                s3
        Match               *.s3_hl_out
        Bucket              ${S3_BUCKET_NAME}
        Region              ${AWS_REGION}
        s3_key_format       /host/$TAG/%Y/%m/%d/%H/%M/%S
        upload_timeout      5m

    [OUTPUT]
        Name                s3
        Match               *.s3_dp_out
        Bucket              ${S3_BUCKET_NAME}
        Region              ${AWS_REGION}
        s3_key_format       /dataplane/$TAG/%Y/%m/%d/%H/%M/%S
        upload_timeout      5m

    [OUTPUT]
        Name                nrlogs
        Match               newrelic_kube.*
        license_key         ${NR_LICENSE_KEY}

    [OUTPUT]
        Name                nrlogs
        Match               dataplane.systemd.docker.*
        license_key         ${NR_LICENSE_KEY}

    [OUTPUT]
        Name                nrlogs
        Match               host.*
        license_key         ${NR_LICENSE_KEY}
  time.lua: |
    # This script is called by fluent-bit to append a time to the log message.
    function append_tag(tag, timestamp, record)
      new_record = record
      host = record["private_ip"]:gsub("%.", "-")
      new_record["host"] = "ip-"..host
      return 1, timestamp, new_record
    end
    
  record_modifier.lua: |
    # This script is called by fluent-bit to append a stream_name to the log message.
    function record_modifier(tag, timestamp, record)
      if record["kubernetes"] ~= nil then
        new_record = record
        new_record["stream_name"] = record["kubernetes"]["pod_name"].."_"..record["kubernetes"]["namespace_name"].."_"..record["kubernetes"]["container_name"]
        return 1, timestamp, new_record
      else
        output = tag .. ":  [" .. string.format("%f", timestamp) .. ", { "
        for key, val in pairs(record) do
          output = output .. string.format(" %s => %s,", key, val)
        end  
        output = string.sub(output,1,-2) .. " }]"
        print(output)
        return -1, 0, 0
      end
    end

  change_output.lua: |
    # This script is called by fluent-bit to change output based on LEGACY_LOGGING env var
    function change_output(tag,timestamp,record)
      flag = string.lower(os.getenv("LEGACY_LOGGING"))
      if flag == "false" then
        new_record = record
        new_record["tag"] = "ping_apps.elk_out"
        return 1, timestamp, new_record
      else
        return 0, 0, 0
      end
    end

  deduplicate.lua: |
    function deduplicate(tag,timestamp,record)
      flag = string.lower(os.getenv("LEGACY_LOGGING"))
      if flag == "false" then
        return -1, 0, 0
      else
        return 0, 0, 0
      end
    end

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluent-bit
  labels:
    k8s-app: fluent-bit
spec:
  selector:
    matchLabels:
      k8s-app: fluent-bit
  template:
    metadata:
      labels:
        k8s-app: fluent-bit
    spec:
      containers:
      - name: fluent-bit
        image: public.ecr.aws/r2h3l6e4/pingcloud-clustertools/amazon/aws-for-fluent-bit:2.24.0
        imagePullPolicy: Always
        command:
          - "/bin/sh"
        args:
          - "-c"
          - "S3_BUCKET_NAME=${S3_BUCKET#s3://} /entrypoint.sh"
        securityContext:
          capabilities:
            drop:
              - ALL
            add:
              - CAP_FOWNER
        env:
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: cluster-info
                  key: logs.region
            - name: CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: cluster-info
                  key: cluster.name
            - name: READ_FROM_HEAD
              valueFrom:
                configMapKeyRef:
                  name: cluster-info
                  key: read.head
            - name: READ_FROM_TAIL
              valueFrom:
                configMapKeyRef:
                  name: cluster-info
                  key: read.tail
            - name: HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: FLB_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: cluster-info
                  key: log.level
            - name: LEGACY_LOGGING
              valueFrom:
                configMapKeyRef:
                  name: cluster-info
                  key: legacy_logging
            - name: NR_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: nr-license-key
                  key: NEW_RELIC_LICENSE_KEY
            - name: S3_BUCKET
              valueFrom:
                  configMapKeyRef:
                    name: s3-raw-logs-bucket
                    key: bucketName
            - name: NR_CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: cluster-info
                  key: newrelic_cluster_name
        resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 100Mi
        volumeMounts:
        # Please don't change below read-only permissions
        - name: fluentbitstate
          mountPath: /fluent-bit/state
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluent-bit-config
          mountPath: /fluent-bit/etc/
        - name: runlogjournal
          mountPath: /run/log/journal
          readOnly: true
        - name: dmesg
          mountPath: /var/log/dmesg
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: fluentbitstate
        hostPath:
          path: /fluent-bit/state
        #emptyDir: {}
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluent-bit-config
        configMap:
          name: fluent-bit-config
      - name: runlogjournal
        hostPath:
          path: /run/log/journal
      - name: dmesg
        hostPath:
          path: /var/log/dmesg
      serviceAccountName: fluent-bit
      tolerations:
      - key: node-role.kubernetes.io/controlplane
        operator: Exists
        effect: NoSchedule
      - operator: "Exists"
        effect: "NoExecute"
      - operator: "Exists"
        effect: "NoSchedule"
