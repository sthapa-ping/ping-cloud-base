# Replicating the current in-cluster 'Application', per CDE
# NOTE: CSR branch must exactly match the cluster name for everything to connect properly, since the app set will
# generate an Application per cluster
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: "ping-cloud-all-cdes"
  namespace: argocd
spec:
  generators:
    - clusters:
        selector:
          matchLabels:
            # Custom label created by argocd-bootstrap, only target these clusters
            ping.cloud.argo.auto-configure: "true"
  template:
    metadata:
      # {{name}} is cluster name from the cluster generator above
      name: "ping-cloud-{{name}}-${TENANT_NAME}-${REGION_NICK_NAME}"
      namespace: argocd
      annotations:
        argocd-image-updater.argoproj.io/git-branch: "{{name}}"
        argocd-image-updater.argoproj.io/image-list: ${IMAGE_LIST}
        argocd-image-updater.argoproj.io/apps.update-strategy: latest
        argocd-image-updater.argoproj.io/apps.allow-tags: regexp:^${IMAGE_TAG_PREFIX}.[0-9]+$
        argocd-image-updater.argoproj.io/write-back-method: git:secret:argocd/argocd-image-updater-ssh-key
        argocd-image-updater.argoproj.io/write-back-target: kustomization
        notifications.argoproj.io/subscribe.on-sync-failed.slack: ${SLACK_CHANNEL}
        notifications.argoproj.io/subscribe.on-sync-status-unknown.slack: ${SLACK_CHANNEL}
    spec:
      ignoreDifferences:
        - group: batch
          kind: Job
          jsonPointers:
            - /spec/ttlSecondsAfterFinished
      syncPolicy:
        automated:
          prune: true
      destination:
        server: "{{server}}"
      project: default
      source:
        path: k8s-configs/${REGION_NICK_NAME}
        repoURL: ${CLUSTER_STATE_REPO_URL}
        targetRevision: "{{name}}"
        plugin:
          name: git-ops-command

---
# The per-app application set, for splitting up the monorepo
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  # TODO: maybe change this name since it matches the old application name?
  name: "ping-cloud-${CLUSTER_STATE_REPO_BRANCH}-${TENANT_NAME}-${REGION_NICK_NAME}-per-app"
  namespace: argocd
spec:
  generators:
    - git:
        repoURL: ${CLUSTER_STATE_REPO_URL}
        revision: ${CLUSTER_STATE_REPO_BRANCH}
        directories:
          - path: "*"
          - path: k8s-configs
            exclude: true
  template:
    metadata:
      name: "${REGION_NICK_NAME}-{{path.basename}}"
      annotations:
        argocd-image-updater.argoproj.io/git-branch: ${CLUSTER_STATE_REPO_BRANCH}
        argocd-image-updater.argoproj.io/image-list: ${IMAGE_LIST}
        argocd-image-updater.argoproj.io/apps.update-strategy: latest
        argocd-image-updater.argoproj.io/apps.allow-tags: regexp:^${IMAGE_TAG_PREFIX}.[0-9]+$
        argocd-image-updater.argoproj.io/write-back-method: git:secret:argocd/argocd-image-updater-ssh-key
        argocd-image-updater.argoproj.io/write-back-target: kustomization
        notifications.argoproj.io/subscribe.on-sync-failed.slack: ${SLACK_CHANNEL}
        notifications.argoproj.io/subscribe.on-sync-status-unknown.slack: ${SLACK_CHANNEL}
    spec:
      project: default
      source:
        repoURL: ${CLUSTER_STATE_REPO_URL}
        targetRevision: ${CLUSTER_STATE_REPO_BRANCH}
        path: "{{path}}/${REGION_NICK_NAME}"
      destination:
        server: https://kubernetes.default.svc
      ignoreDifferences:
        - group: batch
          kind: Job
          jsonPointers:
            - /spec/ttlSecondsAfterFinished
      syncPolicy:
        automated:
          prune: true
